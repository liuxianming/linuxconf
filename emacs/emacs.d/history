;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(command-history evil-ex-history ido-file-history minibuffer-history ido-buffer-history extended-command-history))
(setq command-history '((find-file "/Users/liuxianming/Working/FNN/src/caffe/layers/base_conv_layer.cpp") (switch-to-buffer "vision_layers.hpp") (find-file "/Users/liuxianming/Working/FNN/src/caffe/layers/base_conv_layer.cpp") (find-file "/Users/liuxianming/Working/FNN/include/caffe/vision_layers.hpp") (kill-buffer "*Diff*") (diff "/Users/liuxianming/Working/FNN/include/caffe/layer.hpp" "/Users/liuxianming/Working/caffe_feedback/include/caffe/layer.hpp" nil) (switch-to-buffer "layer.hpp • caffe_feedback") (kill-buffer "*Diff*") (switch-to-buffer "layer.hpp • FNN") (diff "/Users/liuxianming/Working/FNN/include/caffe/layer.hpp" "/Users/liuxianming/Working/caffe_feedback/include/caffe/layer.hpp" nil) (kill-buffer "layer.hpp • caffe_feedback") (kill-buffer "*Diff*") (diff "/Users/liuxianming/Working/caffe_feedback/include/caffe/layer.hpp" "/Users/liuxianming/Working/FNN/include/caffe/layer.hpp" nil) (diff-mode) (diff "/Users/liuxianming/Working/FNN/include/caffe/layer.hpp" "/Users/liuxianming/Working/caffe_feedback/include/caffe/layer.hpp" nil) (diff "/Users/liuxianming/Working/caffe_feedback/include/caffe/layer.hpp" "/Users/liuxianming/Working/caffe_feedback/include/caffe/layer.hpp" nil) (find-file "/Users/liuxianming/Working/FNN/include/caffe/layer.hpp") (kill-buffer "common_layers.hpp") (find-file "/Users/liuxianming/Working/FNN/include/caffe/common_layers.hpp") (kill-buffer "*scratch*") (kill-buffer "layer.hpp • FNN") (switch-to-buffer "layer.hpp • FNN") (find-file "/Users/liuxianming/Working/caffe_feedback/include/caffe/layer.hpp") (kill-buffer "*Messages*") (kill-buffer "*Compile-Log*") (kill-buffer "hm3.tex") (kill-buffer "init-evil.el") (kill-buffer "init-editing-utils.el") (kill-buffer "init.el") (kill-buffer "layer.hpp") (diff-mode) (switch-to-buffer "init.el") (find-file "/Users/liuxianming/.emacs.d/lisp/init-editing-utils.el") (evil-find-char nil 24) (find-file "/Users/liuxianming/.emacs.d/init.el") (dark) (shell nil) (evil-delete 2345 2347 'exclusive nil nil) (evil-delete 2345 2349 'exclusive nil nil) (evil-delete 2345 2346 'exclusive nil nil) (evil-delete 2345 2353 'exclusive nil nil) (evil-delete 2344 2344 'exclusive nil nil) (evil-surround-delete 100) (evil-delete 2344 2345 'inclusive nil nil) (evil-delete 2344 2352 'exclusive nil nil) (evil-delete 2343 2346 'inclusive nil nil) (evil-delete 2345 2346 'inclusive nil nil) (evil-delete 2345 2347 'inclusive nil nil) (kill-buffer "*Customize Group: Emacs*") (evil-delete 2205 2212 'inclusive nil nil) (evil-delete 2205 2211 'inclusive nil nil) (evil-delete 2191 2194 'inclusive nil nil) (evil-delete 2144 2146 'exclusive nil nil) (evil-delete 2145 2147 'exclusive nil nil) (evil-delete 2145 2153 'inclusive nil nil) (evil-delete 2145 2152 'inclusive nil nil) (evil-delete 2145 2151 'inclusive nil nil) (evil-delete 2145 2154 'inclusive nil nil) (evil-delete 2145 2155 'inclusive nil nil) (switch-to-buffer "hm3.tex") (evil-delete 2089 2152 'line nil nil) (find-file "/Users/liuxianming/Working/cs543_hw/HM3/Report/hm3.tex") (package-install 'flycheck) (package-install 'undo-tree)))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1))))
(setq ido-file-history '("base_conv_layer.cpp" "vision_layers.hpp" "layer.hpp" "common_layers.hpp" "init-editing-utils.el" "init.el" "hm3.tex" "undo-tree-autoloads.el" "undo-tree.elc" "init-uniquify.el"))
(setq minibuffer-history '("flycheck" "undo-tree" "evil"))
(setq ido-buffer-history '("vision_layers.hpp" "*Diff*" "layer.hpp • caffe_feedback" "*Diff*" "layer.hpp • FNN" "layer.hpp • caffe_feedback" "*Diff*" "common_layers.hpp" nil "*scratch*" "layer.hpp • FNN" "*Messages*" "*Compile-Log*" "*scratch*" "hm3.tex" "init-evil.el" "init-editing-utils.el" "init.el" "layer.hpp" "init.el" "*Customize Group: Emacs*" "hm3.tex" "init-editing-utils.el" "net.cpp" "*Messages*" "*Compile-Log*" "*scratch*" "init-editing-utils.el" "undo-tree.elc" "init.el" "init-uniquify.el" " *undo-tree*" "TODO"))
(setq extended-command-history '("diff" "diff-mode" "diff" "diff-mode" "dark" "shell" "package-install" "undo-tree-visualize" "evil-ex" "package-install" "shell"))
